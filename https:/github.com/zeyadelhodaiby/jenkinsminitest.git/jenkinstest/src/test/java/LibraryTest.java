import org.testng.annotations.Test;
import org.testng.annotations.BeforeMethod;
import org.testng.AssertJUnit;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Random;

import javax.imageio.ImageIO;


/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'zeyadelhodaiby' at '3/27/18 2:11 PM' with Gradle 2.14.1
 *
 * @author zeyadelhodaiby, @date 3/27/18 2:11 PM
 */
public class LibraryTest {
	
	public static WebDriver driver;

    @BeforeMethod
	@BeforeTest 
    public void setUp() throws Exception
	{

			driver=new FirefoxDriver();


			driver.get("https://www.bmw.de/de/index.html");
	
Thread.sleep(9000);	

WebElement ele = driver.findElement(By.xpath("/html/body/div[2]/div[3]/div[1]/div/div/div[1]/img[1]"));

//Get entire page screenshot
File screenshot = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
BufferedImage  fullImg = ImageIO.read(screenshot);

org.openqa.selenium.Point point = ele.getLocation();

//Get width and height of the element
int eleWidth = ele.getSize().getWidth();
int eleHeight = ele.getSize().getHeight();

//Crop the entire page screenshot to get only element screenshot
BufferedImage eleScreenshot= fullImg.getSubimage(point.getX(), point.getY(),
 eleWidth, eleHeight);
ImageIO.write(eleScreenshot, "png", screenshot);

//Copy the element screenshot to disk
File screenshotLocation = new File("temp/1111111.png");
FileUtils.copyFile(screenshot, screenshotLocation);

}


	@Test
	public void test() throws Exception
	{	
		Thread.sleep(5000);

		File Img1  =  TakenSS();
		driver.get("https://www.yahoo.com/");

		Thread.sleep(5000);

		File Img2  =  TakenSS();

		AssertJUnit.assertEquals(false,CompareImage.CompareImages(Img1, Img2));

	}
	
	public File TakenSS() throws Exception
	{	

Random rand = new Random();

int  n = rand.nextInt(50) + 1;
	     System.out.println(driver.getTitle());
		   File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		   
		 //  File x = new File("/Users/zeyadelhodaiby/Desktop/bmwpics/test"+n+".png");
		   File x = new File("temp/test"+n+".png");

		    FileUtils.copyFile(scrFile, x);
		    
		    return x;
	}
	
}
